{"version":1,"ops":[{"type":5,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1533556978,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE3NzI3MTQ2ODk="},"added":["RFC"],"removed":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1534101242,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxMjM2NTE4Mg=="},"message":"The same timeline is also available through the \"normal\" API v3: https://developer.github.com/v3/issues/timeline/\n\nThat said, 2+ years after its introduction, it's still marked as preview.\n\n\u003eThe API to get issue timeline events is currently available for developers to preview. During the preview period, the APIs may change without advance notice. Please see the blog post for full details.","files":null},{"type":5,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1534162185,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE3ODUxOTI5NzU="},"added":["enhancement"],"removed":null},{"type":3,"author":{"name":"George Antoniadis","email":"george@noodles.gr","login":"geoah","avatar_url":"https://avatars2.githubusercontent.com/u/88447?v=4"},"timestamp":1534514421,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxMzg3NTE0NQ=="},"message":"A bot/plugin would be nice that could sync tickets across git-bug and github.\nThis would allow devs to always have the issues close to the code and non-devs to be able to create and respond to tickets in github's ui.","files":null},{"type":3,"author":{"name":"Aaron Sky","email":"aaronsky@skyaaron.com","login":"aaronsky","avatar_url":"https://avatars2.githubusercontent.com/u/10502938?v=4"},"timestamp":1534596134,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxNDA1NTM5Nw=="},"message":"It would be useful to be able to sync tickets from an arbitrary bug tracker by plugging into the backend of git-bug. Something like this would be very useful to me, save for the fact I do not use GitHub.com at work.","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1534615568,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxNDA3NjIyMQ=="},"message":"\u003e It would be useful to be able to sync tickets from an arbitrary bug tracker by plugging into the backend of git-bug. Something like this would be very useful to me, save for the fact I do not use GitHub.com at work.\n\nYes, it should be designed in a generic way so we could support any bugtracker. Github is just the obvious first target.","files":null},{"type":3,"author":{"name":"anarcat","email":"","login":"anarcat","avatar_url":"https://avatars3.githubusercontent.com/u/796623?v=4"},"timestamp":1534864630,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxNDcxMTg0Mg=="},"message":"This would be an absolutely killer feature for me, as it could mean the ability to work on GitHub bugs completely offline, if syncs were two-way *and* incremental. ;) Obviously, an inflatable raptor would be nice too, but this could be a good first step. Thanks, in any case, for this awesome project, nice to see new blood in that area.","files":null},{"type":3,"author":{"name":"Jed Fox","email":"git@twopointzero.us","login":"j-f1","avatar_url":"https://avatars2.githubusercontent.com/u/25517624?v=4"},"timestamp":1534867212,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxNDcyNzE4Ng=="},"message":"`git-bug` could display author names as “[Real Name] (login)” or just the login if the real name is not present or is the same as the login.","files":null},{"type":3,"author":{"name":"anarcat","email":"","login":"anarcat","avatar_url":"https://avatars3.githubusercontent.com/u/796623?v=4"},"timestamp":1534940976,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxNTAxNTA2Ng=="},"message":"yeah, i was also thinking that the `Email` field in git-bug could be generalized to a URL instead, which would encompass GitHub, but also other platforms...","files":null},{"type":5,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1534982693,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE4MDM5OTc1MDY="},"added":["Core"],"removed":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1537810412,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNDA1OTI2OQ=="},"message":"I made some decent progress here:\n\n- framework to implement a bridge (importer, exporter or both) + configuration\n- new commands to configure, list and run an importer/exporter\n- half of a github importer with currently the process to create and store an API token, and most of the graphql query to fetch the data","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1537874699,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNDMwNTUwNA=="},"message":"On a side note, for a proper support for github, https://github.com/MichaelMure/git-bug/issues/52 needs to be implemented as well ..","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1537893378,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNDQxNDc1OQ=="},"message":"![image](https://user-images.githubusercontent.com/294669/46028750-b0c2ae00-c0f1-11e8-9a7a-5956e122563a.png)\n\n:tada:","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538479212,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjIzNzM3MQ=="},"message":"- git-bug core now support comment edition\n- the importer is now incremental, no need to wipe the bugs anymore, only the new changes will be imported\n- the importer now import comments edition\n\nSo this is .. done ? I would love to have some real world testing, any volunteer ?","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538479825,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjIzOTgzMg=="},"message":"Some things I purposely leave for the future:\n\n- there is room left for optimization. Currently, all the issue data is queried and imported if needed. For this repository, this amount to 49 HTTP requests and 17 seconds. That's decent but too much to use git-bug as a local cache for a github project. I guess there is a clever way to detect early what as changed and prune most of these request.\n- images/files are not imported, but the core is not fully ready for that yet.","files":null},{"type":3,"author":{"name":"anarcat","email":"","login":"anarcat","avatar_url":"https://avatars3.githubusercontent.com/u/796623?v=4"},"timestamp":1538492434,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjMwNzQwNQ=="},"message":"how about gitlab support now? ;)","files":null},{"type":3,"author":{"name":"Jed Fox","email":"git@twopointzero.us","login":"j-f1","avatar_url":"https://avatars2.githubusercontent.com/u/25517624?v=4"},"timestamp":1538493285,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjMxMjg4MA=="},"message":"You could order the issues by last updated, then pull 10 issues at a time until you get back to the date you last checked @MichaelMure.","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538493471,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjMxNDA0NQ=="},"message":"@anarcat contribution more than welcome ;) I have a limited amount of manpower that will drastically reduce in the following weeks.\n\nIf you want to give it a try, implement [these interfaces](https://github.com/MichaelMure/git-bug/blob/master/bridge/core/interfaces.go). For reference, the [github importer](https://github.com/MichaelMure/git-bug/tree/master/bridge/github) is around 750 lines or code, mainly due to the verbosity of the graphql code.","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538493832,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjMxNjMxOQ=="},"message":"@j-f1 interesting idea. A tricky thing though is the logical clocks. It's better to insert the new operations in the chronological order to have them ordered properly. Admittedly, I'm not doing that very well currently anyway ...","files":null},{"type":3,"author":{"name":"anarcat","email":"","login":"anarcat","avatar_url":"https://avatars3.githubusercontent.com/u/796623?v=4"},"timestamp":1538494919,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjMyMzI2NQ=="},"message":"@MichaelMure awesome, glad to see there's an interface and openness to the idea!","files":null},{"type":3,"author":{"name":"anarcat","email":"","login":"anarcat","avatar_url":"https://avatars3.githubusercontent.com/u/796623?v=4"},"timestamp":1538508960,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjQwMjU4NA=="},"message":"So I gave this a shot. A few comments...\n\n 1. I noticed that `git-bug` already exists as a command on my system. It's part of the [git-extras](https://github.com/tj/git-extras) package shipped in Debian, and is a rather [silly alias](https://github.com/tj/git-extras/blob/master/bin/git-bug)\n\n 2. the setup is a little unintuitive. here's my first try:\n\n        $ ~/go//bin/git-bug bridge configure \n        Building bug cache... Done.\n        target (github): \u003cHIT ENTER\u003e\n        invalid target\n        target (github): ^C\n\n    Now I may be a little dumb, but I didn't immediately figure out that the word in parenthesis was what I was supposed to write there (and not, as I expected, a default value that would get accepted when I hit enter). When I figured that out, it was more streamlined...\n\n 3. ... but then, what do you do with my passphrase?\n \n        Github project URL: https://github.com/linkchecker/linkchecker/\n        username: anarcat\n        password: \n        two-factor authentication code\n    \n    it does says above that \"git-bug will generate an access token in your Github profile.\" but it would be better to explicitly state that the password is not written on disk (which, hopefully, it isn't).\n\n 4. then I went into a dance of trying to figure out the right `pull` incantation. my first attempt failed because of an unrelated error message, which sent me down seeking the magical command:\n    \n        [1020]anarcat@curie:linkchecker$ ~/go//bin/git-bug bridge pull\n        import issue: contribution guidelines and FAQ\n        Error: no diff\n        Usage:\n          git-bug bridge pull [\u003cname\u003e] [flags]\n\n        Flags:\n          -h, --help   help for pull\n\n        [1020]anarcat@curie:linkchecker$ ~/go//bin/git-bug bridge pull default\n        Error: bad bridge fullname: default\n        Usage:\n          git-bug bridge pull [\u003cname\u003e] [flags]\n\n        Flags:\n          -h, --help   help for pull\n\n        [1021]anarcat@curie:linkchecker1$ ~/go//bin/git-bug bridge pull github\n        Error: bad bridge fullname: github\n        Usage:\n          git-bug bridge pull [\u003cname\u003e] [flags]\n\n        Flags:\n          -h, --help   help for pull\n\n        [1027]anarcat@curie:linkchecker130$ ~/go//bin/git-bug bridge \n        github.default\n        [1028]anarcat@curie:linkchecker$ ~/go//bin/git-bug bridge pull github.default\n\n    Phew! I'm not sure what to do about this. Maybe the problem is the first error shouldn't show the usage: I *did* call the command correctly and only got confused because I was shown the usage and thought I had to specify (and therefore guess) the right target name.\n\n 5. it does not seem to actually work:\n\n        [1034]anarcat@curie:linkchecker$ ~/go//bin/git-bug ls\n        [1035]anarcat@curie:linkchecker$ \n\n    Trust me, [linkcheck](https://github.com/linkchecker/linkchecker/) has [plenty of issues](https://github.com/linkchecker/linkchecker/issues). :) I *wish* that was right we had zero issues left, but unfortunately it is more likely not syncing the issues back down...\n\nThanks for the feature though! Can't wait to try it out. :)","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538516854,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjQ0MTk0NQ=="},"message":"Awesome feedback, thanks!\n\n\u003e     1. I noticed that `git-bug` already exists as a command on my system. It's part of the [git-extras](https://github.com/tj/git-extras) package shipped in Debian, and is a rather [silly alias](https://github.com/tj/git-extras/blob/master/bin/git-bug)\n\nYeah, that's annoying. I've been pondering on renaming the binary to something like `gb` and leave the git porcelain world. Really not sure here. I would [make the git people happy though](https://git.github.io/rev_news/2018/09/19/edition-43/).\n\n\u003e     2. the setup is a little unintuitive. here's my first try:\n\u003e        ```\n\u003e        $ ~/go//bin/git-bug bridge configure \n\u003e        Building bug cache... Done.\n\u003e        target (github): \u003cHIT ENTER\u003e\n\u003e        invalid target\n\u003e        target (github): ^C\n\u003e        ```\n\u003e        Now I may be a little dumb, but I didn't immediately figure out that the word in parenthesis was what I was supposed to write there (and not, as I expected, a default value that would get accepted when I hit enter). When I figured that out, it was more streamlined...\n\nGood point. I thought it would be intuitive once more bridge are added (the prompt would be `target (github,gitlab):`. But I think I should change the prompt entirely and do something like:\n```\ntarget:\n[1]: github\n[2]: gitlab\n```\n\n\u003e     3. ... but then, what do you do with my passphrase?\n\u003e        ```\n\u003e        Github project URL: https://github.com/linkchecker/linkchecker/\n\u003e        username: anarcat\n\u003e        password: \n\u003e        two-factor authentication code\n\u003e        ```\n\u003e        it does says above that \"git-bug will generate an access token in your Github profile.\" but it would be better to explicitly state that the password is not written on disk (which, hopefully, it isn't).\n\nIt's not stored. Agree on that, more explanation is needed.\n\n\u003e     4. then I went into a dance of trying to figure out the right `pull` incantation. my first attempt failed because of an unrelated error message, which sent me down seeking the magical command:\n\u003e        ```\n\u003e        [1020]anarcat@curie:linkchecker$ ~/go//bin/git-bug bridge pull\n\u003e        import issue: contribution guidelines and FAQ\n\u003e        Error: no diff\n\u003e        Usage:\n\u003e          git-bug bridge pull [\u003cname\u003e] [flags]\n\u003e        \n\u003e        Flags:\n\u003e          -h, --help   help for pull\n\u003e        \n\u003e        [1020]anarcat@curie:linkchecker$ ~/go//bin/git-bug bridge pull default\n\u003e        Error: bad bridge fullname: default\n\u003e        Usage:\n\u003e          git-bug bridge pull [\u003cname\u003e] [flags]\n\u003e        \n\u003e        Flags:\n\u003e          -h, --help   help for pull\n\u003e        \n\u003e        [1021]anarcat@curie:linkchecker1$ ~/go//bin/git-bug bridge pull github\n\u003e        Error: bad bridge fullname: github\n\u003e        Usage:\n\u003e          git-bug bridge pull [\u003cname\u003e] [flags]\n\u003e        \n\u003e        Flags:\n\u003e          -h, --help   help for pull\n\u003e        \n\u003e        [1027]anarcat@curie:linkchecker130$ ~/go//bin/git-bug bridge \n\u003e        github.default\n\u003e        [1028]anarcat@curie:linkchecker$ ~/go//bin/git-bug bridge pull github.default\n\u003e        ```\n\u003e        Phew! I'm not sure what to do about this. Maybe the problem is the first error shouldn't show the usage: I _did_ call the command correctly and only got confused because I was shown the usage and thought I had to specify (and therefore guess) the right target name.\n\n`Error: no diff` should not happen. The [github documentation](https://developer.github.com/v4/object/usercontentedit/) on this query is full of holes, you must have hit a special case I didn't covered properly.\n\n\u003e     5. it does not seem to actually work:\n\u003e        ```\n\u003e        [1034]anarcat@curie:linkchecker$ ~/go//bin/git-bug ls\n\u003e        [1035]anarcat@curie:linkchecker$ \n\u003e        ```\n\u003e        Trust me, [linkcheck](https://github.com/linkchecker/linkchecker/) has [plenty of issues](https://github.com/linkchecker/linkchecker/issues). :) I _wish_ that was right we had zero issues left, but unfortunately it is more likely not syncing the issues back down...\n\nI'll give a try with this repo. Hopefully I can hit the same bug.","files":null},{"type":3,"author":{"name":"Jed Fox","email":"git@twopointzero.us","login":"j-f1","avatar_url":"https://avatars2.githubusercontent.com/u/25517624?v=4"},"timestamp":1538519278,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjQ1MTY0Ng=="},"message":"For logging in, how about redirecting users to https://github.com/settings/tokens/new?scopes=user,repo\u0026description=git-bug%20token? You can alter the description and scopes as needed, but that would eliminate the need to log in on the terminal. Alternatively, you could create an OAuth app and authenticate with that.","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538522760,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjQ2MzMyMw=="},"message":"\u003e For logging in, how about redirecting users to https://github.com/settings/tokens/new?scopes=user,repo\u0026description=git-bug%20token? You can alter the description and scopes as needed, but that would eliminate the need to log in on the terminal. \n\nA question of taste I guess. I feel like it would be a bigger UX hurdle and prone to errors. The way I see it is that git-bug is a free software, meaning anyone can check that the auth informations are handled properly. It's [here](https://github.com/MichaelMure/git-bug/blob/master/bridge/github/config.go) if anyone want to have a look. Having the token creation handled by git-bug also means that it can be automated if needed.\n\nIt could be added as an alternative configure method though.\n\n\u003e Alternatively, you could create an OAuth app and authenticate with that.\n\nAs far as I know, I can't. A Github Oauth app require an Authorization callback URL. That works for a website, not so much for a terminal app. Too bad, I heard the authorization policy is less crappy ...","files":null},{"type":3,"author":{"name":"Jed Fox","email":"git@twopointzero.us","login":"j-f1","avatar_url":"https://avatars2.githubusercontent.com/u/25517624?v=4"},"timestamp":1538524371,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjQ2ODEzOQ=="},"message":"You could start a server on `localhost`, then pass the port as a parameter to the callback URL, which could be a simple static site that would fetch the token and POST it to the local server, then call `window.close()`.","files":null},{"type":3,"author":{"name":"anarcat","email":"","login":"anarcat","avatar_url":"https://avatars3.githubusercontent.com/u/796623?v=4"},"timestamp":1538527675,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjQ3NzE2MA=="},"message":"for the record, i loved that i didn't have to fire up a web browser to login. that part is awesome. just reassure me it's doing the right thing with my password.\n\nas for the second point: just make \"enter\" choose a sane default value (e.g. \"github\") and i'll be happy.\n\nand WRT git-rev: wow! didn't know about that newsletter, great! and there are way more git-bug-like packages than i thought!!! thanks :)","files":null},{"type":3,"author":{"name":"Waldir Pimenta","email":"waldyrious@gmail.com","login":"waldyrious","avatar_url":"https://avatars2.githubusercontent.com/u/478237?v=4"},"timestamp":1538550296,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjUzMjk5Nw=="},"message":"\u003e and WRT git-rev: wow! didn't know about that newsletter, great! and there are way more git-bug-like packages than i thought!!! thanks :)\n\nJust because that link is a little buried in [@MichaelMure's comment](https://github.com/MichaelMure/git-bug/issues/7#issuecomment-426441945), here's the direct URL for the curious (like me!): https://git.github.io/rev_news/2018/09/19/edition-43/","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538562716,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjU4NzczMA=="},"message":"@j-f1 the Authorization callback URL is unique, defined on github in the Oauth app configuration. Also the local server would most likely be unreachable from the internet.","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538566365,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjYwMzM2Nw==","github-url":"https://github.com/MichaelMure/git-bug/issues/7#issuecomment-426603367"},"message":"@anarcat I tried with your repo, and indeed it fails. I think that what happen is that github introduced the comment history [earlier this year](https://blog.github.com/changelog/2018-05-24-comment-edit-history/) but these issue are older. Github simply doesn't have the data anymore.\n\nI'll have to change my code to ignore comment edition in these cases.","files":null},{"type":3,"author":{"name":"Jed Fox","email":"git@twopointzero.us","login":"j-f1","avatar_url":"https://avatars2.githubusercontent.com/u/25517624?v=4"},"timestamp":1538577039,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjY1OTIwNA=="},"message":"@MichaelMure you [can pass](https://developer.github.com/apps/building-oauth-apps/authorizing-oauth-apps/#redirect-urls) a custom redirect URL, as long as it starts with the configured URL.","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538592025,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjc1MDUxOQ=="},"message":"@j-f1 that means that a user would have to entrust their credential to a webservice somewhere, that is, unauditable code. Having that directly in git-bug make more sense imho.","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538593119,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjc1NzU4Mw=="},"message":"By the way, the resulting token is stored in the repo git config. Does someone see a reason why it would be a bad idea ?","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538594775,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNjc2Njk5Ng=="},"message":"Alright, I changed the first prompt and added more explanation, it should be less prone to error now.","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538755643,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNzQxNzY1OA=="},"message":"@anarcat I fixed the code for the older issue/comment edition (not pushed yet).\n\nI discovered a new little surprise in your repository: you have an issue (https://github.com/linkchecker/linkchecker/issues/60) opened by a now deleted user. In this case, Github just give a null user. :trollface:","files":null},{"type":3,"author":{"name":"anarcat","email":"","login":"anarcat","avatar_url":"https://avatars3.githubusercontent.com/u/796623?v=4"},"timestamp":1538757132,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNzQyNDg0OA=="},"message":"oh wow, and here i thought that @ghost guy was super productive! ;) TIL!","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538820154,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNzU2MTc0NA=="},"message":"@anarcat It's working for your repo now (i.e. not crashing anymore). Could you check if you see something weird ?","files":null},{"type":3,"author":{"name":"anarcat","email":"","login":"anarcat","avatar_url":"https://avatars3.githubusercontent.com/u/796623?v=4"},"timestamp":1538838584,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNzU4MTI0OA=="},"message":"On 2018-10-06 03:02:39, Michael Muré wrote:\n\u003e @anarcat It's working for your repo now (i.e. not crashing anymore). Could you check if you see something weird ?\n\nwill do, but it will take a few days.","files":null}]}