{"version":1,"ops":[{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1532187849,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQwNjgwNTAwOQ=="},"message":"Thanks, will do !\n\nI recently switched to use cobra as a lib for command line parsing and stuff. Did you check ? The root command should list properly the subcommands as well as provide suggestion for typos.\n\n`git bug commands` was designed to be able to build command line completion tool and to generate documentation, but now that cobra does that (check the doc folder), it might be removed.\n\nI guess I should follow the same pattern for other commands as well ? For labels it should be:\n`git bug label \u003cid\u003e` list the labels\n`git bug label add \u003cid\u003e` add a label\n`git bug label remove \u003cid\u003e` remove a label\n\nThat's quite a lot of keystrokes though...\n\nI was also thinking about having a command like `git bug select \u003cid\u003e` that would select a bug as default for future edit with other commands. Good or bad idea ?","files":null},{"type":3,"author":{"name":"Ermolay Romanov","email":"email@ermolay.com","login":"ermik","avatar_url":"https://avatars2.githubusercontent.com/u/229435?v=4"},"timestamp":1533299252,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxMDIzODI1OQ=="},"message":"As long as there is a Y/N prompt for any default options — they wouldn't hurt. Keystrokes are handles by shell aliases, which just needs to be explained to some people.\n\nProject seems awesome.","files":null},{"type":3,"author":{"name":"Alexandre Franke","email":"","login":"afranke","avatar_url":"https://avatars0.githubusercontent.com/u/117241?v=4"},"timestamp":1533299902,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxMDI0MDcwMg=="},"message":"\u003e I guess I should follow the same pattern for other commands as well ?\n\nYes, consistecny is important and completion should reduce the amount of keystrokes anyway.\n\n\u003e I was also thinking about having a command like git bug select \u003cid\u003e that would select a bug as default for future edit with other commands. Good or bad idea ?\n\nGood idea. git already has a few interactive subcommands like `git add -p` which you may want to mimic.","files":null},{"type":2,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1533301205,"metadata":{"github-id":"MDE3OlJlbmFtZWRUaXRsZUV2ZW50MTc2OTkwNTUyMw=="},"title":"CLI UX need refinements","was":"CLI UX need refinements"},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1533301631,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxMDI0NzY2Nw==","github-url":"https://github.com/MichaelMure/git-bug/issues/2#issuecomment-410247667"},"message":"\u003e Project seems awesome.\n\n\\o/\n\nJust so you know, I'm waiting for the core feature to stabilize and to have a consistent plan for all the commands to tackle this problem.\n\nAnother question, should `git bug` simply run the interactive UI (so `git bug termui` would be removed) ? I expect that most people would use the interactive UI so it would make sense to launch it easily. It does hide a bit the command's help for the newcomer though ...","files":null},{"type":3,"author":{"name":"Ermolay Romanov","email":"email@ermolay.com","login":"ermik","avatar_url":"https://avatars2.githubusercontent.com/u/229435?v=4"},"timestamp":1533308581,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxMDI4MTY1OA=="},"message":"Run the interactive by default. Provide `--ci` and similar options to allow no-TTY execution (e.g. the build / continuous integration system files bugs on failure automatically).","files":null},{"type":5,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1533556977,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE3NzI3MTQ2Nzg="},"added":["RFC"],"removed":null},{"type":5,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1534982753,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE4MDM5OTg4OTI="},"added":["CLI"],"removed":null},{"type":3,"author":{"name":"Jozef Legény","email":"","login":"jlegeny","avatar_url":"https://avatars3.githubusercontent.com/u/5584004?v=4"},"timestamp":1535446633,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxNjUwNTUzNw=="},"message":"I'd like to suggest some additional commands for actions that do not seem currently possible:\n\n- `git bug status` to see what bugs were added since the latest push\n- `git bug reset` to undo changes to a bug\n- `git bug remove` to delete a bug\n\nMy main point is that it is important to be able to modify the state in all possible ways before it is pushed to the remote.","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1535476298,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxNjY2NjgxMA=="},"message":"@jlegeny that's a good point. Technically if possible to implement `status` and `reset` by comparing or copying the references in `refs/bugs/*` and `refs/remotes/\u003cremote\u003e/bugs/*`. That also mean that the actual status can be different if you use multiple remote.","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1536252163,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxOTE2MjM1MQ==","github-url":"https://github.com/MichaelMure/git-bug/issues/2#issuecomment-419162351"},"message":"With the previous comments, I tried to summon my inner UX guy and devise a plan:\n\n## Current situation\n\n- `git bug`: show help\n\n\n- `git bug ls`: list bugs\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n\n- `git bug new [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug comment \u003cid\u003e [-m \"message\"]`: add comment\n- `git bug label \u003cid\u003e [-r] [\u003clabel\u003e...]`: add/remove labels\n- `git bug open \u003cid\u003e`: change status to OPEN\n- `git bug close \u003cid\u003e`: change status to CLOSE\n\n## Problems/questions\n\n- missing `git bug title`\n- should `git bug` run the termui instead of showing the help ?\n- merge `open` and `close` into a `status` command ?\n- `new` is not a verb\n- `label` has a different UX\n- can't have a select mechanism with the current `label` --\u003e what is the id, what is a label ?\n- is it better to favor short commands or complete set of features for the CLI ? (e.g. `git bug title` to edit, or `git bug title` to show the current title and `git bug title change` to change it) ?\n\n## New shinny plan\n\n#### As before\n\n- `git bug push [\u003cremote\u003e]`: push to remote\n- `git bug pull [\u003cremote\u003e]`: pull from remote\n- `git bug termui`: launch the terminal UI\n- `git bug webui [-p 1234]`: launch the web UI\n\n#### Changed\n\n- `git bug`: list bugs\n- `git bug comment [\u003cid\u003e]`: show all comments\n- `git bug comment add [\u003cid\u003e] [-m \"message\"]`: add comment\n- `git bug label [\u003cid\u003e]`: show all labels\n- `git bug label add [\u003cid\u003e] \u003clabel\u003e...`: add labels\n- `git bug label rm [\u003cid\u003e] \u003clabel\u003e...`: remove labels\n\n#### Removed\n\n- `git bug new`: renamed to `add`\n- `git bug ls`: removed in favor of `git bug`\n\n#### Added\n\n- `git bug add [-t \"title\"] [-m \"message\"]`: new bug\n- `git bug title [\u003cid\u003e]`: show the title\n- `git bug title edit [\u003cid\u003e]`: edit the title\n- `git bug status [\u003cid\u003e] [\u003cremote\u003e]`: show what bugs have been added/changed regarding the default or explicit remote. No select mechanism here, the \u003cid\u003e is a filter.\n- `git bug status open [\u003cid\u003e]`: change status to open\n- `git bug status close [\u003cid\u003e]`: change status to closed\n- `git bug reset \u003cid\u003e [\u003cremote\u003e]`: clear the changes of a bug to match the bug of a remote\n- `git bug rm [\u003cremote\u003e]`: remove a bug locally or on a remote \n\n\n## select mechanism\n\n- `git bug select \u003cid\u003e`: select a bug for implicit editing later\n- using a command with an explicit id discard the selected id\n- automatic select with `new/add` ?\n- instead of an id, a filter could be used (e.g.: `git select \"UX refinement\"`), and it would work if only one bug match.\n- should display a summary of the selected bug when successfully selecting to avoid mistakes\n- there is still a potential conflict when a command has both an id and arbitrary args (e.g. `git bug label add`). That will require a test to see if the first arg could be a bug id or a prefix to a bug id. There is really unlikely case where it could be a problem though: `git bug label add cafe` when we have a bug with an id starting with `cafe`.\n\nWhat do you all think ?","files":null},{"type":3,"author":{"name":"Jed Fox","email":"git@twopointzero.us","login":"j-f1","avatar_url":"https://avatars2.githubusercontent.com/u/25517624?v=4"},"timestamp":1536252455,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxOTE2MzkxOQ=="},"message":"How about `git bug label` and `git bug unlabel`?","files":null},{"type":5,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1536253233,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDE4MzA5NDMxNDI="},"added":["Easy pick"],"removed":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1536318416,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQxOTQwNjQwNQ=="},"message":"@j-f1 you would have no commands to see the label of a bug. Also, consistency and predictability are paramount for a good UX.","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1537096371,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyMTc0NzE2OA=="},"message":"The downside of this new approach is that the commands are quite long. `git bug title edit` is 18 characters without the new title itself nor a bug id/prefix.\n\nThis is mitigated by the command auto-completion and the termUI though. Another way would be to have a short alias to the `git-bug` binary. Another way would be to have a `git bug shell` command that would spawn a terminal where commands would be simply `title edit` and so on.","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1537270552,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyMjM1ODc4Mw=="},"message":"Alright, I made the \"safe\" changes, as detailed [above](https://github.com/MichaelMure/git-bug/issues/2#issuecomment-419162351).\n\nThe missing parts are either completely new commands or things I'm unsure about.  Please have a test and give me some feedback.","files":null},{"type":3,"author":{"name":"Luke Adams","email":"","login":"adamslc","avatar_url":"https://avatars2.githubusercontent.com/u/19842623?v=4"},"timestamp":1538838142,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNzU4MDYxNg=="},"message":"What are your plans for a `git bug config` command? To start off the conversation, here is an incomplete list of things that might possibly need to be configured. Note that I'm not arguing that everything on this list should actually be implemented.\n\n- Default remote\n- Set of possible labels\n- Possibly move `git bug bridge configure` under here?\n- Default new bug and comment templates\n- Keybindings in `termui`\n- Author data specific to git bug. I'm not sure if this exists?\n\nAlso, I think that having connivance flags to update the config from other commands makes sense. In #62 I suggested using `-d` and `--set-default` in `git bug push` to get and set the default remote. I'm now convinced that those aren't the right flags to use (looks to much like delete), but I still think that this is important functionality. Perhaps mirroring `git push` and using `-u` and `--set-upstream` would makes sense.","files":null},{"type":3,"author":{"name":"Jed Fox","email":"git@twopointzero.us","login":"j-f1","avatar_url":"https://avatars2.githubusercontent.com/u/25517624?v=4"},"timestamp":1538875828,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNzYxODI4Mg=="},"message":"Why not use the regular `git config` command and name the settings `git-bug.foo`?","files":null},{"type":3,"author":{"name":"Luke Adams","email":"","login":"adamslc","avatar_url":"https://avatars2.githubusercontent.com/u/19842623?v=4"},"timestamp":1538877889,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNzYxOTYzNA=="},"message":"For some settings, I think that makes a lot of sense, but not all of these configuration options can be stored in a local config file. In particular, modifying the set of allowed labels seems like it needs to be more closely integrated with git bug.","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538907046,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNzY0MTI0OA=="},"message":"Let's move the config discussion here: https://github.com/MichaelMure/git-bug/issues/63","files":null},{"type":3,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538907407,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDQyNzY0MTU4Mw=="},"message":"I move the missing part in separate discussion, I guess we can consider the matter here resolved.\n\nhttps://github.com/MichaelMure/git-bug/issues/64\nhttps://github.com/MichaelMure/git-bug/issues/65\nhttps://github.com/MichaelMure/git-bug/issues/66","files":null},{"type":4,"author":{"name":"Michael Muré","email":"","login":"MichaelMure","avatar_url":"https://avatars1.githubusercontent.com/u/294669?v=4"},"timestamp":1538907407,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MTg4ODk0MDE3NQ=="},"status":2}]}